"""
Quick test for Gemini general knowledge integration
"""

from general_knowledge_service import get_gk_service, handle_general_knowledge_query
from Voice_tool import bolo_stream

# Test questions
test_questions = [
    "‡§Ü‡§∏‡§Æ‡§æ‡§® ‡§®‡•Ä‡§≤‡§æ ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§π‡•à?",
    "‡§¨‡§æ‡§∞‡§ø‡§∂ ‡§ï‡•à‡§∏‡•á ‡§π‡•ã‡§§‡•Ä ‡§π‡•à?",
    "‡§™‡•á‡§°‡§º ‡§π‡§∞‡•á ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç?",
    "‡§ö‡§æ‡§Å‡§¶ ‡§™‡§∞ ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à?"
]

print("=" * 60)
print("üß™ Testing Gemini General Knowledge Integration")
print("=" * 60)

service = get_gk_service()

if not service.is_configured():
    print("\n‚ùå Gemini API is not configured!")
    print("Please check your GEMINI_API_KEY in .env file")
    exit(1)

print("\n‚úÖ Gemini API is configured and ready!")
print("\n" + "=" * 60)

for i, question in enumerate(test_questions, 1):
    print(f"\nüìù Question {i}: {question}")
    print("-" * 60)
    
    # Get answer
    answer, error = service.ask_question(question)
    
    if error:
        print(f"‚ùå Error: {error}")
        continue
    
    if answer:
        print(f"‚úÖ Answer:\n{answer}")
        print("\nüîä Speaking the answer...")
        
        # Test voice output
        try:
            bolo_stream(answer, lang='hi')
            print("‚úÖ Voice output successful!")
        except Exception as e:
            print(f"‚ö†Ô∏è Voice output failed: {e}")
    
    print("-" * 60)
    
    if i < len(test_questions):
        import time
        time.sleep(2)  # Pause between questions

print("\n" + "=" * 60)
print("‚úÖ Test completed!")
print("=" * 60)
